package com.zjmy.moor.center;

import java.util.regex.Pattern;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import org.junit.*;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.*;
import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;

import com.zjmy.moor.gongyong.DelHLD;

public class TestInterest  {
  private WebDriver driver;
  private String baseUrl;
  private boolean acceptNextAlert = true;
  private StringBuffer verificationErrors = new StringBuffer();
  @Before
  public void setUp() throws Exception {
	driver = new FirefoxDriver();
    baseUrl = "https://edu.bjzjmy.com:5656/index#/";
	driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
	driver.manage().window().maximize();
	//driver.manage().window().setSize(new Dimension(1680,1050));
  }
  @Test
  public void test1() throws Exception {
	//登录
	//调用数据库连接方法
	DelHLD.initDatabase("delete from tn_multiple_intel_result;");
	DelHLD.initDatabase("delete from tn_hld_user_result;");
	driver.get(baseUrl + "/index");
	driver.findElement(By.id("loginBtn")).click();
	driver.findElement(By.id("username")).clear();
	driver.findElement(By.id("username")).sendKeys("310107200107203414");
	driver.findElement(By.id("password")).clear();
	driver.findElement(By.id("password")).sendKeys("203414");
	driver.findElement(By.xpath(".//*[@id='lable']")).click();
	//获取滑动按钮开始的位置
	WebElement begin = driver.findElement(By.xpath(".//*[@id='lable']"));
	//获取滑动按钮结束的位置
	//WebElement end = driver.findElement(By.xpath("html/body/div[1]"));
	//new Actions(driver).dragAndDrop(begin, end).perform();
	new Actions(driver).dragAndDropBy(begin, 215, 0).perform();
	driver.findElement(By.id("btn_submit")).click();
	//点击取消按钮
	//driver.findElement(By.xpath("html/body/div[5]/div[7]/button")).click();
	Thread.sleep(1000);
    //登录个人中心    
	Actions builder = new Actions(driver);
	builder.moveToElement(driver.findElement(By.xpath("html/body/div[2]/div[2]/div[1]/div/div[2]/a"))).perform();  
	Thread.sleep(1000);
	driver.findElement(By.xpath("html/body/div[2]/div[2]/div[1]/div/div[2]/a/ul/li[1]")).click();
	//点击进入我的个人中心
	Thread.sleep(1000);
	//点击兴趣测试按钮
	driver.findElement(By.xpath(".//*[@id='app-body']/div/ng-view/div[2]/div[2]/div[2]/div[2]/div/div[2]/a[1]/div")).click();
	//点击霍兰德测试
	driver.findElement(By.xpath(".//*[@id='app-body']/div/ng-view/div[4]/div/div/a[1]")).click();
	//点击开开始测试按钮
	driver.findElement(By.xpath(".//*[@id='app-body']/div/ng-view/div[3]/div/ol/li[1]/div[2]/div/button")).click();
	Thread.sleep(2000);
	for(int i=2;i<=61;i++) {
		String divNumBegin=".//*[@id='app-body']/div/ng-view/div[3]/div/ol/li[";
		String divNumCenter="]/div[2]/div[";
    	String divNumEnd="]/button";
    	int number = new Random().nextInt(2) + 1;
    	System.out.println(divNumBegin+i+divNumCenter+number+divNumEnd); 
        driver.findElement(By.xpath(divNumBegin+i+divNumCenter+number+divNumEnd)).click();
	}
	//提交结果
	driver.findElement(By.xpath(".//*[@id='app-body']/div/ng-view/div[3]/div/ol/li[62]/div/div/button")).click();
	Thread.sleep(4000);
	for(int i=1;i<=5;i++) {
		String divNumBegin="html/body/v-modal/v-dialog/div[1]/div[";
    	String divNumEnd="]/div";
    	int number = new Random().nextInt(10) + 1;
    	System.out.println(divNumBegin+number+divNumEnd); 
        driver.findElement(By.xpath(divNumBegin+number+divNumEnd)).click();
        Thread.sleep(1000);
	}
	Thread.sleep(2000);
	//点击确定按钮
	driver.findElement(By.xpath("html/body/v-modal/v-dialog/div[2]/div[2]/button")).click();
	//登录个人中心    
	Actions builder2 = new Actions(driver);
	builder2.moveToElement(driver.findElement(By.xpath("html/body/div[2]/div[2]/div[1]/div/div[2]/a"))).perform();  
	Thread.sleep(1000);
	driver.findElement(By.xpath("html/body/div[2]/div[2]/div[1]/div/div[2]/a/ul/li[1]")).click();
	//点击进入我的个人中心
	Thread.sleep(2000);
	//点击兴趣测试按钮
	driver.findElement(By.xpath(".//*[@id='app-body']/div/ng-view/div[2]/div[2]/div[2]/div[2]/div/div[2]/a[1]/div")).click();
	//点击多元智能测试
	driver.findElement(By.xpath(".//*[@id='app-body']/div/ng-view/div[4]/div/div/a[2]/span")).click();
	Thread.sleep(1000);
	//点击开开始测试按钮
	driver.findElement(By.xpath(".//*[@id='app-body']/div/ng-view/div[3]/div/ol/li[1]/div[2]/div/button")).click();
	Thread.sleep(1000);	
	for(int i=2;i<=81;i++) {
		String divNumBegin=".//*[@id='app-body']/div/ng-view/div[3]/div/ol/li[";
		String divNumCenter="]/div[2]/div[";
		String divNumEnd="]/button";
		int number = new Random().nextInt(5) + 1;
		System.out.println(divNumBegin+i+divNumCenter+number+divNumEnd); 
	    driver.findElement(By.xpath(divNumBegin+i+divNumCenter+number+divNumEnd)).click();
	}
	driver.findElement(By.xpath(".//*[@id='app-body']/div/ng-view/div[3]/div/ol/li[82]/div/div/button")).click();
	Thread.sleep(2000);
	for(int i=1;i<=5;i++) {
		String divNumBegin="html/body/v-modal/v-dialog/div[1]/div[";
		String divNumEnd="]/div";
		int number = new Random().nextInt(10) + 1;
		System.out.println(divNumBegin+number+divNumEnd); 
	    driver.findElement(By.xpath(divNumBegin+number+divNumEnd)).click();
	    Thread.sleep(1000);
	}
	Thread.sleep(2000);
	driver.findElement(By.xpath("html/body/v-modal/v-dialog/div[2]/div[2]/button")).click();
	Thread.sleep(1000);
	//再次点击确定
	//driver.findElement(By.xpath("html/body/div[5]/div[7]/div/button")).click();
	//Thread.sleep(1000);
    //退出
	Actions builder3 = new Actions(driver);
	builder3.moveToElement(driver.findElement(By.xpath("html/body/div[2]/div[2]/div[1]/div/div[2]/a"))).perform();  
	Thread.sleep(1000);
	driver.findElement(By.xpath("html/body/div[2]/div[2]/div[1]/div/div[2]/a/ul/li[3]")).click();
	Thread.sleep(3000);
	driver.findElement(By.xpath("html/body/div[5]/div[7]/div/button")).click();
	Thread.sleep(1000);
	//调用数据库连接方法
	System.out.println(this.getClass().getName()+"用例已经完成！！！");
  }

  @After
  public void tearDown() throws Exception {
    driver.quit();
    String verificationErrorString = verificationErrors.toString();
    if (!"".equals(verificationErrorString)) {
      fail(verificationErrorString);
    }
  }

  private boolean isElementPresent(By by) {
    try {
      driver.findElement(by);
      return true;
    } catch (NoSuchElementException e) {
      return false;
    }
  }

  private boolean isAlertPresent() {
    try {
      driver.switchTo().alert();
      return true;
    } catch (NoAlertPresentException e) {
      return false;
    }
  }

  private String closeAlertAndGetItsText() {
    try {
      Alert alert = driver.switchTo().alert();
      String alertText = alert.getText();
      if (acceptNextAlert) {
        alert.accept();
      } else {
        alert.dismiss();
      }
      return alertText;
    } finally {
      acceptNextAlert = true;
    }
  }
}
