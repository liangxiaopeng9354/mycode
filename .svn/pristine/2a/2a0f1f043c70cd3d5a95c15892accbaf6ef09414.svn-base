package com.zjmy.moor.yantao;

import java.util.regex.Pattern;
import java.util.concurrent.TimeUnit;
import org.junit.*;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.*;
import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;

public class TestZiyuan {
  private WebDriver driver;
  private String baseUrl;
  private boolean acceptNextAlert = true;
  private StringBuffer verificationErrors = new StringBuffer();

  @Before
  public void setUp() throws Exception {
    driver = new FirefoxDriver();
    baseUrl = "https://edu.bjzjmy.com:5656/index#/";
    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
    driver.manage().window().maximize();
  }

  @Test
  public void test12312() throws Exception {
    
  	driver.get(baseUrl + "/index");
	driver.findElement(By.id("loginBtn")).click();
	driver.findElement(By.id("username")).clear();
	driver.findElement(By.id("username")).sendKeys("310107200107203414");
	driver.findElement(By.id("password")).clear();
	driver.findElement(By.id("password")).sendKeys("203414");
	driver.findElement(By.xpath(".//*[@id='lable']")).click();
	//获取滑动按钮开始的位置
	WebElement begin = driver.findElement(By.xpath(".//*[@id='lable']"));
	//获取滑动按钮结束的位置
	//WebElement end = driver.findElement(By.xpath("html/body/div[1]"));
	//new Actions(driver).dragAndDrop(begin, end).perform();
	new Actions(driver).dragAndDropBy(begin, 215, 0).perform();
	driver.findElement(By.id("btn_submit")).click();
    driver.findElement(By.xpath("//a[2]/small")).click();
    Thread.sleep(2000);
    driver.findElement(By.xpath("(//input[@type='text'])[2]")).clear();
    Thread.sleep(2000);
    driver.findElement(By.xpath("(//input[@type='text'])[2]")).sendKeys("地理");
    Thread.sleep(2000);
    driver.findElement(By.xpath("//div[@id='scrollable-dropdown-menu']/span[2]/button")).click();
    Thread.sleep(2000);
    //随机点三个资源
    driver.findElement(By.xpath("html/body/div[2]/div[1]/div/div[3]/div/div[2]/div[2]/div/div/div[2]")).click();
    Thread.sleep(2000);
    driver.findElement(By.xpath("html/body/div[2]/div[1]/div/div[3]/div/div[2]/div[3]/div/div/div[2]")).click();
    Thread.sleep(2000);
    driver.findElement(By.xpath("html/body/div[2]/div[1]/div/div[3]/div/div[2]/div[4]/div/div/div[2]")).click();
    Thread.sleep(2000);
    
    //点击展开研究群组
    driver.findElement(By.xpath("html/body/div[2]/div[1]/div/div[3]/div/div[5]")).click();
    Thread.sleep(2000);
    //点击一个讨论组
    driver.findElement(By.xpath("//div[@id='chatRoom']/div/div[2]/div[3]/div/div[2]/h3")).click();
    Thread.sleep(2000);
    //开始聊天
    driver.findElement(By.id("newMessage")).clear();
    Thread.sleep(2000);
    driver.findElement(By.id("newMessage")).sendKeys("123");
    Thread.sleep(2000);
    driver.findElement(By.xpath("//div[@id='chatRoomDetail']/div/div[3]/button")).click();
    Thread.sleep(2000);
    driver.findElement(By.cssSelector("i.icon.ion-chevron-left")).click();
    Thread.sleep(2000);
    driver.findElement(By.xpath("//div[@id='chatRoom']/div/div[2]/div[6]/div/div[2]/h3")).click();
    Thread.sleep(2000);
    driver.findElement(By.id("newMessage")).clear();
    Thread.sleep(2000);
    driver.findElement(By.id("newMessage")).sendKeys("你好");
    Thread.sleep(2000);
    driver.findElement(By.xpath("//div[@id='chatRoomDetail']/div/div[3]/button")).click();
    Thread.sleep(2000);
    driver.findElement(By.cssSelector("i.icon.ion-chevron-left")).click();
    Thread.sleep(2000);
    driver.findElement(By.id("chatRoomBottom")).click();
    Thread.sleep(2000);
  }

  @After
  public void tearDown() throws Exception {
    driver.quit();
    String verificationErrorString = verificationErrors.toString();
    if (!"".equals(verificationErrorString)) {
      fail(verificationErrorString);
    }
  }

  private boolean isElementPresent(By by) {
    try {
      driver.findElement(by);
      return true;
    } catch (NoSuchElementException e) {
      return false;
    }
  }

  private boolean isAlertPresent() {
    try {
      driver.switchTo().alert();
      return true;
    } catch (NoAlertPresentException e) {
      return false;
    }
  }

  private String closeAlertAndGetItsText() {
    try {
      Alert alert = driver.switchTo().alert();
      String alertText = alert.getText();
      if (acceptNextAlert) {
        alert.accept();
      } else {
        alert.dismiss();
      }
      return alertText;
    } finally {
      acceptNextAlert = true;
    }
  }
}
