package com.zjmy.moor.gongyong;
//自动化下载某个文件
import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.testng.annotations.Test;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.AfterMethod;

public class Download {
	public static String DownloadFilepath = "D:\\DownloadFiles";
	static WebDriver driver;
	static String url="ftp://192.168.10.68/";
	JavascriptExecutor js;

  @Test
  public static void test() throws Exception
  {
	  driver = new FirefoxDriver(FilefoxDriverProfile());
	  driver.get(url); 
	  driver.findElement(By.xpath("html/body/table/tbody/tr[4]/td[1]/table/tbody/tr/td/a")).click();
	  
	  try 
	  {
		  Thread.sleep(3000);
	  }catch(Exception e){
		  e.printStackTrace();
	  }
  }
  

  @AfterMethod
  public void afterMethod() 
  {
	  driver.quit();
  }
  
  public static FirefoxProfile FilefoxDriverProfile () throws Exception
  {
	  //声明一个profile对象
	  FirefoxProfile profile = new FirefoxProfile();
	  profile.setPreference("browser.download.folderList",2);
	  profile.setPreference("browser.download.manager.showWhenStarting", false);
	  profile.setPreference("browser.download.dir", DownloadFilepath);
	  profile.setPreference("browser.helperApps.neverAsk.openFile",
			  "application/xhtml+xml,application/xml,application/x-msdownload,application/octet/octet-stream,application/exe,txt/csv,application/pdf,application/x-msexcl,application/x-excel,application/excel,image/png,image/jpeg,text/html,text/plain,text/x-c");
	  profile.setPreference("browser.helperApps.neverAsk.saveToDisk",
			  "application/xhtml+xml,application/xml,application/x-msdownload,application/octet/octet-stream,application/exe,txt/csv,application/pdf,application/x-msexcl,application/x-excel,application/excel,image/png,image/jpeg,text/html,text/plain,text/x-c");
	  //不会打开未知MIMe类型
	  profile.setPreference("browser.helperApps.alwaysAsk.force", false);
	  //不会弹出警告框
	  profile.setPreference("browser.download.manager.alertOnEXEopen", false);
	  profile.setPreference("browser.download.manager.focusWhenStarting", false);
	  profile.setPreference("browser.download.manager.useWindow", false);
	  profile.setPreference("browser.download.manager.showAlertOnComplete", false);
	  profile.setPreference("browser.download.manager.closewhenDone", false);
	  return profile;
  }
  public static void main(String[] args) throws Exception {
	  test();
	  System.err.println();
}
} 
